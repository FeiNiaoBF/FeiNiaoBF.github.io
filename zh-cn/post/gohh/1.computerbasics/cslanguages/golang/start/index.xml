<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>起 on Yeelight の 小屋</title>
        <link>https://FeiNiaoBF.github.io/zh-cn/post/gohh/1.computerbasics/cslanguages/golang/start/</link>
        <description>Recent content in 起 on Yeelight の 小屋</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Example Person. All rights reserved.</copyright>
        <lastBuildDate>Thu, 14 Mar 2024 21:53:46 +0800</lastBuildDate><atom:link href="https://FeiNiaoBF.github.io/zh-cn/post/gohh/1.computerbasics/cslanguages/golang/start/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Strings</title>
        <link>https://FeiNiaoBF.github.io/zh-cn/p/strings/</link>
        <pubDate>Mon, 13 May 2024 09:10:39 +0800</pubDate>
        
        <guid>https://FeiNiaoBF.github.io/zh-cn/p/strings/</guid>
        <description>&lt;h2 id=&#34;utf-8编码和-unicode-文本区别&#34;&gt;UTF-8编码和 Unicode 文本区别&lt;/h2&gt;
&lt;p&gt;在 Golang 中字符串的底层结构字节使用 UTF-8 编码来表示 Unicode 文本&lt;/p&gt;
&lt;p&gt;其中 &lt;em&gt;Unicode&lt;/em&gt; 是一个&lt;strong&gt;字符集&lt;/strong&gt;，定义了字符和它们的唯一&lt;strong&gt;代码点&lt;/strong&gt;，而 &lt;em&gt;UTF-8&lt;/em&gt; 是一种&lt;strong&gt;编码方式&lt;/strong&gt;，用于将 Unicode 字符表示为字节序列。&lt;/p&gt;
&lt;h2 id=&#34;字符串&#34;&gt;字符串&lt;/h2&gt;
&lt;p&gt;Go 语言中的字符串值是一个可空的&lt;strong&gt;字节序列&lt;/strong&gt;，字节序列中的字节个数称为该字符串的长度。String 类型其实是一个&amp;quot;&lt;strong&gt;描述符&lt;/strong&gt;”，它本身并不真正存储字符串数据，而是由一个指向底层存储的指针和字符串的长度字段组成的&lt;/p&gt;
</description>
        </item>
        <item>
        <title>DataType</title>
        <link>https://FeiNiaoBF.github.io/zh-cn/p/datatype/</link>
        <pubDate>Mon, 13 May 2024 09:10:19 +0800</pubDate>
        
        <guid>https://FeiNiaoBF.github.io/zh-cn/p/datatype/</guid>
        <description>&lt;h2 id=&#34;go-语言中的数据结构&#34;&gt;Go 语言中的数据结构&lt;/h2&gt;
&lt;h3 id=&#34;基础数据结构&#34;&gt;基础数据结构&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;数组（Array）&lt;/strong&gt; - 由固定长度的相同类型元素组成的数据结构。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;切片（Slice）&lt;/strong&gt; - 由数组构成的动态长度序列，提供了更灵活的操作方式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;映射（Map）&lt;/strong&gt; - 存储键值对的集合，用于快速检索数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结构体（Struct）&lt;/strong&gt; - 可以包含不同类型字段的复合数据类型。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;其他数据结构和类型&#34;&gt;其他数据结构和类型&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;通道（Channel）&lt;/strong&gt; - 用于在 Go 协程之间进行通信的类型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;接口（Interface）&lt;/strong&gt; - 定义对象的行为，是一种抽象类型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;指针（Pointer）&lt;/strong&gt; - 存储变量的内存地址，用于直接访问内存中的值。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;通道channel&#34;&gt;通道（Channel）&lt;/h4&gt;
&lt;h4 id=&#34;接口interface&#34;&gt;接口（Interface）&lt;/h4&gt;
&lt;h4 id=&#34;指针pointer&#34;&gt;指针（Pointer）&lt;/h4&gt;
&lt;h2 id=&#34;命名规范&#34;&gt;命名规范&lt;/h2&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;首字母大小写：&lt;/strong&gt; 以大写字母开头的标识符是 &lt;strong&gt;public&lt;/strong&gt; 的（可导出的），可以被其他包访问。以小写字母开头的标识符是私有的，只能在当前包内访问。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Go 语言中，有一些命名规范适用于不同的命名情况。以下是一些常见的命名规范：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;包名&lt;/strong&gt;：包名应该使用单数形式，且应该是小写的，例如 &lt;code&gt;utils&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件名&lt;/strong&gt;：文件名应该全部使用小写字母，可以包含下划线 &lt;code&gt;_&lt;/code&gt;，例如 &lt;code&gt;my_file.go&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;变量&lt;/strong&gt;：变量名使用驼峰命名法，例如 &lt;code&gt;myVariable&lt;/code&gt;。私有变量的命名应该以小写字母开头，公共变量则以大写字母开头。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常量&lt;/strong&gt;：常量的命名应该全部使用大写字母，可以包含下划线 &lt;code&gt;_&lt;/code&gt;，例如 &lt;code&gt;MAX_SIZE&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;函数&lt;/strong&gt;：函数名同样使用驼峰命名法，例如 &lt;code&gt;calculateTotal&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结构体&lt;/strong&gt;：结构体的命名同样使用驼峰命名法，例如 &lt;code&gt;type MyStruct struct&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;接口&lt;/strong&gt;：接口的命名同样使用驼峰命名法，例如 &lt;code&gt;type MyInterface interface&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;枚举&lt;/strong&gt;：枚举的命名同样使用驼峰命名法，例如 &lt;code&gt;type Color int&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 Go 语言中，命名变量时有一些常见的命名规范，这些规范有助于编写清晰、易读的代码。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用驼峰命名法：变量名应该使用驼峰命名法，即除第一个单词外，其余单词的首字母大写，例如 &lt;code&gt;myVariable&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用有意义的名称：变量名应该具有描述性，能够清晰地表达变量的用途和含义。&lt;/li&gt;
&lt;li&gt;避免使用单个字符作为变量名：除非是临时变量或者循环变量，否则应该避免使用单个字符作为变量名，以提高代码的可读性。&lt;/li&gt;
&lt;li&gt;使用短小的名称：变量名应该尽量简洁，但又能清晰表达变量的含义。&lt;/li&gt;
&lt;li&gt;使用全大写命名的常量：在 Go 语言中，全大写的变量名通常用于表示常量。&lt;/li&gt;
&lt;li&gt;遵循约定俗成的命名规范：Go 语言社区有一些常见的命名约定，比如用 &lt;code&gt;i&lt;/code&gt; 表示循环变量，用 &lt;code&gt;err&lt;/code&gt; 表示错误变量等，建议遵循这些约定以保持代码风格的一致性。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这些命名规范有助于编写清晰、易读的代码，并且有助于提高代码的可维护性。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Resource</title>
        <link>https://FeiNiaoBF.github.io/zh-cn/p/resource/</link>
        <pubDate>Mon, 13 May 2024 09:08:51 +0800</pubDate>
        
        <guid>https://FeiNiaoBF.github.io/zh-cn/p/resource/</guid>
        <description>&lt;h2 id=&#34;入门资料&#34;&gt;入门资料&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://go.dev/doc/effective_go&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方Docs&lt;/a&gt; ，官方的文档是最好的入门资料，强烈推荐看，如果可以完整看完、理解并实践的话说明就吃透 Go 语言了。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gobyexample.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Go by Example&lt;/a&gt;，是一个集合了 Go 语言基础类型、特性等众多示例的网站，你可以通过这些实例来初步了解和学习 Go 语言的使用。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://quii.gitbook.io/learn-go-with-tests&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Learn GO with Tests&lt;/a&gt;，该网址是通过使用 Test 来学习 Go 的开源书籍，在其中作者将以如何使用 Go 自带的 &lt;code&gt;testing&lt;/code&gt; 库来一步一步的认识 Go 语言当中的类型和其他特性。从中将学习到 &lt;strong&gt;TDD&lt;/strong&gt; 的技术、Go 语言的单元测试、学习测试驱动开发等，很大的提升自己的 Go 语言的使用和开发&lt;/p&gt;
&lt;h2 id=&#34;社交平台&#34;&gt;社交平台&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.reddit.com/r/golang/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Reddit 上的go社区&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;书籍推荐&#34;&gt;书籍推荐&lt;/h2&gt;
</description>
        </item>
        <item>
        <title>LearningPath</title>
        <link>https://FeiNiaoBF.github.io/zh-cn/p/learningpath/</link>
        <pubDate>Mon, 13 May 2024 09:08:32 +0800</pubDate>
        
        <guid>https://FeiNiaoBF.github.io/zh-cn/p/learningpath/</guid>
        <description>&lt;h2 id=&#34;hello-golang&#34;&gt;Hello, Golang&lt;/h2&gt;
&lt;p&gt;Go 语言是 Google 开发的一种&lt;strong&gt;静态强类型&lt;/strong&gt;、&lt;strong&gt;编译型&lt;/strong&gt;、&lt;strong&gt;并发型&lt;/strong&gt;，并具有&lt;strong&gt;垃圾回收功能&lt;/strong&gt;的编程语言。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下载地址：&lt;a class=&#34;link&#34; href=&#34;https://go.dev/dl/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Downloads - The Go Programming Language&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;快速开始&#34;&gt;快速开始&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;下载 Go 到你的学习机上，检查 go 的现状&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在你喜欢的 Workspace 上 Create a new directory&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir gowork
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;添加一个名为 &lt;code&gt;hello.go&lt;/code&gt; 的文件，在其中输入代码&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;In vim, vscode &amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, world&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;In shell&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;package main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;import &amp;#34;&lt;/span&gt;fmt&lt;span class=&#34;s2&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;func main() {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt; fmt.Println(&amp;#34;&lt;/span&gt;Hello, world&lt;span class=&#34;s2&#34;&gt;&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;}&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; hello.go
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;运行它&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go run hell.go
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Welcome to Go!&lt;/p&gt;
&lt;h2 id=&#34;其他&#34;&gt;其他&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2024/05/06/pE3MQOLJI2lNGRY.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
